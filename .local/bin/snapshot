#!/usr/bin/env bash

set -o pipefail
shopt -s nullglob

# state dirs
general=(.mozilla/firefox/profile .vim/{undo,swap} .config/transmission-daemon .local/share/zathura .config/mpv/watch_later)
# state files
general+=(.viminfo .config/fish/fish_variables .local/share/fish/fish_history .stignore "$(readlink .wallpaper)")
# secret dirs
general+=(.password-store)
# secret files
general+=(.ssh/hosts)
# machine specific dirs
machine=(.config/syncthing .stfolder)
# machine specific files
machine+=(.config/pulse/default.pa)

verbose () {
	echo "snapshot: $1" >&2
}

die () {
	echo "snapshot: $1" >&2
	exit 1
}

# usage: archive archive_name name_of_file_array
archive () {
	declare archive="$1.tar.zst.gpg"
	declare -n files="$2"
	tar -c --zstd -f - "${files[@]}" | gpg --quiet --yes --encrypt --output "$archive"
}

# usage: extract archive_name
extract () {
	declare archive="$1.tar.zst.gpg"
	gpg --quiet --batch --decrypt "$archive" | tar -x --zstd -f -
}

while getopts :d:h:o:H:t: opt; do
	case "$opt" in
		d)
			snapshot_dir="$OPTARG" ;;
		h)
			home_dir="$OPTARG" ;;
		o)
			old_dir="$OPTARG" ;;
		H)
			host="$OPTARG" ;;
		t)
			target="$OPTARG" ;;
		\?)
			echo "invalid option '-$OPTARG" ;;
	esac
done

shift $(($OPTIND - 1))

: ${snapshot_dir:="$HOME/.archive"}
: ${home_dir:="$HOME"}
: ${old_dir:="${snapshot_dir}-old"}
: ${host:="$(hostname)"}
: ${target:=/mnt$HOME}

git_args=("--git-dir=$home_dir/.dotfiles.git/" "--work-tree=$home_dir")
target_git_args=("--git-dir=$target/.dotfiles.git/" "--work-tree=$target")

cd "$home_dir"

command="$1"
shift

# preparation
mkdir -p "$snapshot_dir" || die "failed to create snapshot destionation - '$snapshot_dir'"
verbose "killing firefox"
pkill firefox

case "$command" in
push)
	# dotfiles
	verbose "pushing dotfiles"
	git "${git_args[@]}" push || die "failed to push dotfiles"

	# general
	verbose "archiving general files"
	archive "$snapshot_dir/general" general || die "failed to archive general files"

	# machine specific
	verbose "archiving '$host' specific"
	archive "$snapshot_dir/$host" machine || die "failed to archive '$host' specific"
;;
pull)
	# backup first
	mkdir -p "$old_dir" || die "failed to create backup directory - '$old_dir'"
	verbose "backing up general files"
	archive "$old_dir/general" general || die "failed to backup general files"
	mv "${general[@]}" "$old_dir" || die "failed to backup general files"

	# dotfiles
	verbose "pulling dotfiles"
	git "${git_args[@]}" pull || die "failed to pull dotfiles"

	# general
	verbose "extracting general files"
	extract "$snapshot_dir/general" || die "failed to extract general files"

	# firefox doesn't like mismatching config/cache
	verbose "deleting firefox cache"
	rm -rf .cache/mozilla/firefox || die "failed to delete firefox cache"

	# not changed often
	if [[ "$1" == all ]]; then
		# backup
		verbose "backing up '$host' specific"
		archive "$snapshot_dir/$host" machine || die "failed to backup '$host' specific"
		mv "${machine[@]}" "$old_dir" || die "failed to backup '$host' specific"

		# extract
		verbose "extracting '$host' specific"
		extract "$snapshot_dir/host" || die "failed to extract '$host' specific"
	fi
;;
bootstrap)
	# clean
	verbose "cleaning '$target'"
	shopt -s dotglob
	rm -rf "$target"/* || die "failed to clean '$target'"
	shopt -u dotglob

	# dotfiles
	verbose "initializing bare git repository"
	git init --bare "$target/.dotfiles.git" || die "failed to initialize bare git repository"
	git "${target_git_args[@]}" remote add origin https://github.com/lahcim8/dotfiles || die "failed to add git remote"
	git "${target_git_args[@]}" config status.showUntrackedFiles no || die "failed to set git config option"
	verbose "pulling dotfiles"
	git "${target_git_args[@]}" pull --force origin master || die "failed to pull origin"
	git "${target_git_args[@]}" remote set-url origin github:lahcim8/dotfiles.git || die "failed to change origin url"

	# extract
	verbose "extracting to '$target'"
	cd "$target" || die "failed to change to '$target'"

	# general
	verbose "extracting general files"
	extract "$snapshot_dir/general" || die "failed to extract general files"

	# machine specific
	verbose "extracting '$host' specific"
	extract "$snapshot_dir/host" || die "failed to extract '$host' specific"
;;
esac
