#!/usr/bin/env bash

set -o pipefail
shopt -s nullglob

# state dirs
state=(.mozilla/firefox/profile .vim/{undo,swap} .gramps .config/transmission-daemon .local/share/zathura .config/mpv/watch_later)
# state files
state+=(.viminfo .config/fish/fish_variables .local/share/fish/fish_history .clang-format .stignore "$(readlink .wallpaper)")
# machine specific dirs
machine=(.config/syncthing .stfolder)
# machine specific files
machine+=(.config/pulse/default.pa)
# secret dirs
secret=(.ssh .gnupg .password-store)

verbose () { echo "snapshot: $1" >&2 ; }
die () { echo "snapshot: $1" >&2 ; exit 1 ; }

while getopts :d:h:o:t: opt; do
	case "$opt" in
		d)
			snapshot_dir="$OPTARG" ;;
		h)
			home_dir="$OPTARG" ;;
		H)
			host="$OPTARG" ;;
		o)
			old_dir="$OPTARG" ;;
		t)
			target="$OPTARG" ;;
		\?)
			echo "invalid option '-$OPTARG" ;;
	esac
done

snapshot_dir=${snapshot_dir:-"$HOME/.snapshot"}
home_dir=${home_dir:-"$HOME"}
host=${host:-"$(hostname)"}
old_dir=${old_dir:-"$HOME/.snapshot-old"}
target=${target:-/mnt$HOME}
git_args=("--git-dir=$home_dir/.dotfiles.git/" "--work-tree=$home_dir")
target_git_args=("--git-dir=$target/.dotfiles.git/" "--work-tree=$target")

cd "$home_dir"

case "$1" in
push)
	# dotfiles
	verbose "pushing dotfiles"
	git "${git_args[@]}" push || die "failed to push dotfiles"

	# state
	pkill firefox
	verbose "archiving state"
	mkdir -p "$snapshot_dir" || die "failed to create snapshot destionation - '$dest'"
	tar -c --zstd -f "$snapshot_dir/state.tar.zst" "${state[@]}" || die "failed to snapshot state"

	# secret
	verbose "archiving secret"
	tar -c --zstd -f - "${secret[@]}" | gpg --yes -c -e --output "$snapshot_dir/secret.tar.zst.gpg" \
		|| die "failed to snapshot secret"

	# machine specific
	verbose "archiving '$host' specific"
	tar -c --zstd -f "$snapshot_dir/$host-config.tar.zst" "${machine[@]}" || die "failed to snapshot machine specific"
;;
pull)
	# dotfiles
	verbose "pulling dotfiles"
	git "${git_args[@]}" pull || die "failed to pull dotfiles"

	# backup
	mkdir -p "$old_dir" || die "failed to create old directory - '$old_dir'"
	verbose "backing up to '$old_dir'"
	mv "${state[@]}" "${secret[@]}" "$old_dir" || die "failed to backup state & secret files"

	# state
	verbose "killing firefox"
	pkill firefox
	verbose "extracting state"
	tar -x --zstd -f "$snapshot_dir/state.tar.zst" || die "failed to extract state" || die "failed to extract state"

	# secret
	verbose "extracting secret"
	gpg --homedir "$old_dir/.gnupg/" --batch -d "$snapshot_dir/secret.tar.zst.gpg" | tar -x --zstd -f - || die "failed to extract secret"

	verbose "deleting firefox cache"
	rm -rf .cache/mozilla/firefox || die "failed to delete firefox cache"

	# not changed often
	if [[ "$1" == all ]]; then
		# machine specific
		verbose "extracting '$host' specific"
		mv "${machine[@]}" "$old_dir" || die "failed to backup '$host' specific"
		tar -x --zstd -f "$snapshot_dir/$host-config.tar.zst" || die "failed to extract '$host' specific"
	fi
;;
bootstrap)
	# clean
	verbose "cleaning '$target'"
	shopt -s dotglob
	rm -rf "$target"/* || die "failed to clean '$target'"
	shopt -u dotglob

	# dotfiles
	verbose "initializing bare git repository"
	git init --bare "$target/.dotfiles.git" || die "failed to initialize bare git repository"
	git "${target_git_args[@]}" remote add origin https://github.com/lahcim8/dotfiles || die "failed to add git remote"
	git "${target_git_args[@]}" config status.showUntrackedFiles no || die "failed to set git config option"
	verbose "pulling dotfiles"
	git "${target_git_args[@]}" pull --force origin master || die "failed to pull origin"
	git "${target_git_args[@]}" remote set-url origin github:lahcim8/dotfiles.git || die "failed to change origin url"

	# extract
	verbose "extracting to '$target'"

	# state
	verbose "extracting state"
	tar -x --zstd -f "$snapshot_dir/state.tar.zst" -C "$target" || die "failed to extract state" || die "failed to extract state"

	# secret
	verbose "extracting secret"
	gpg --batch -d "$snapshot_dir/secret.tar.zst.gpg" | tar -x --zstd -f - -C "$target" || die "failed to extract secret"

	# machine specific
	verbose "extracting '$host' specific"
	tar -x --zstd -f "$snapshot_dir/$host-config.tar.zst" -C "$target" || die "failed to extract '$host' specific"
;;
confirm)
	verbose "deleting old"
	rm -rf "$old_dir"
esac
